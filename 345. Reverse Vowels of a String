//9ms

class Solution {
public:
    string reverseVowels(string s) {
        int begin = 0, end = s.length()-1;
        char vowelsMap[127] = {0};
        vowelsMap['a'] = 1;
        vowelsMap['e'] = 1;
        vowelsMap['i'] = 1;
        vowelsMap['o'] = 1;
        vowelsMap['u'] = 1;
        vowelsMap['A'] = 1;
        vowelsMap['E'] = 1;
        vowelsMap['I'] = 1;
        vowelsMap['O'] = 1;
        vowelsMap['U'] = 1;
        char temp;
        while(vowelsMap[s[begin]] == 0) begin++;
        while(vowelsMap[s[end]] == 0) end--;
        while (begin < end)
        {
            temp = s[begin];
            s[begin] = s[end];
            s[end] = temp;
            begin++;
            end--;
            
            while(vowelsMap[s[begin]] == 0) begin++;
            while(vowelsMap[s[end]] == 0) end--;
        }
        return s;
    }
};




//12ms,13ms,19ms,orz

class Solution {
public:
    string reverseVowels(string s) {
        int begin = 0, end = s.length() - 1;
    	char temp;
    	while (s[begin] != 'a' && s[begin] != 'e' && s[begin] != 'i' && s[begin] != 'o' && s[begin] != 'u'
    		&& s[begin] != 'A' && s[begin] != 'E' && s[begin] != 'I' && s[begin] != 'O' && s[begin] != 'U') begin++;
    	while (s[end] != 'a' && s[end] != 'e' && s[end] != 'i' && s[end] != 'o' && s[end] != 'u'
    		&& s[end] != 'A' && s[end] != 'E' && s[end] != 'I' && s[end] != 'O' && s[end] != 'U') end--;
    	while (begin < end)
    	{
    		temp = s[begin];
    		s[begin] = s[end];
    		s[end] = temp;
    		begin++;
    		end--;
    
    		while (s[begin] != 'a' && s[begin] != 'e' && s[begin] != 'i' && s[begin] != 'o' && s[begin] != 'u'
    			&& s[begin] != 'A' && s[begin] != 'E' && s[begin] != 'I' && s[begin] != 'O' && s[begin] != 'U') begin++;
    		while (s[end] != 'a' && s[end] != 'e' && s[end] != 'i' && s[end] != 'o' && s[end] != 'u'
    			&& s[end] != 'A' && s[end] != 'E' && s[end] != 'I' && s[end] != 'O' && s[end] != 'U') end--;
    	}
            return s;
    }
};
